name: Laravel CI/CD with Newman Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code ⚙️
        uses: actions/checkout@v4

      - name: Load .env file
        run: export $(cat .env | xargs)

      - name: Create Laravel .env file 🔧
        env:
          APP_KEY: ${{ secrets.APP_KEY }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: |
          echo "🔧 Creating Laravel .env file from .env.ci template..."
          envsubst < sprint5-with-bugs/API/.env.ci > sprint5-with-bugs/API/.env
          cat sprint5-with-bugs/API/.env
          echo "✅ .env file created successfully."

      - name: Start Docker Containers 🐳
        env:
          SPRINT: sprint5-with-bugs
        run: docker compose up -d

      - name: Wait for MariaDB ⏳
        run: |
          until docker compose exec -T mariadb mysqladmin ping -h mariadb -u user -proot --silent; do
            echo "Waiting for MariaDB..."
            sleep 5
          done

      - name: Disable ffi extension
        run: |
          docker compose exec -T laravel-api sed -i 's/extension=ffi/;extension=ffi/' /usr/local/etc/php/php.ini

      - name: Setup Application 🔧
        run: |
          echo "📦 Installing Composer dependencies..."
          docker compose run --rm composer
          echo "🔒 Fixing permissions..."
          docker compose exec -T -u root laravel-api chown -R www-data:www-data /var/www/storage /var/www/bootstrap/cache
          echo "🗄️ Running database migrations and seeding..."
          docker compose exec -T laravel-api php artisan migrate:fresh --seed --force

      - name: Install Node.js & Newman ⚙️
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      - run: npm install -g newman@latest newman-reporter-htmlextra@latest

      - name: Run Newman Tests 🚀
        run: |
          newman run sprint5-with-bugs/API/tests/api/collection.json \
            -e sprint5-with-bugs/API/tests/api/environment.json \
            --iteration-data sprint5-with-bugs/API/tests/api/users-data.csv \
            --reporters cli,junit,htmlextra \
            --reporter-junit-export ./newman-report.xml \
            --reporter-htmlextra-export ./newman-report.html
          ls -l newman-report.*

      - name: Upload Test Report 📊
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: newman-report
          path: |
            newman-report.html
            newman-report.xml

      - name: Cleanup 🧹
        if: always()
        run: docker compose down -v
